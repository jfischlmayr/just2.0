@page "/Projects"
@using JUST.Data.Models;
@using JUST.Data;
@using JUST.Pages;
@using JUST.Shared;
@using Plk.Blazor.DragDrop;
@using Syncfusion.Blazor.DropDowns;
@using Syncfusion.Blazor.Buttons

@inject IProjectData _db;
@inject ITasksData _db_t;
@inject IJSRuntime js;
@inject NavigationManager NavigationManager;


<div class="pages">
	<h1>Projects</h1>
	<div>
		@foreach (var p in projects)
		{
			<ProjectCard project="@p"></ProjectCard>
		}
	</div>
</div>

<div id="listbox2">
    <h4>All Tasks</h4>
    <SfListBox TValue="string[]" DataSource="@Tasks" Scope="combined-list" AllowDragAndDrop="true" Height="290px" TItem="JustTask">
		<ListBoxEvents TValue="string[]" TItem="JustTask" OnDrop="Change"></ListBoxEvents>
		<ListBoxEvents TValue="string[]" Created="created" TItem="JustTask"></ListBoxEvents>
        <ListBoxFieldSettings Text="Name" Value="ID" />
    </SfListBox>
</div>


@code {
	List<Project> projects = new List<Project>();
    SfListBox<string[], JustTask> ListBoxObj = new SfListBox<string[], JustTask>();
	List<JustTask> Tasks { get; set; } = new();

	protected override async Task OnInitializedAsync()
	{
		Tasks = await _db_t.GetTasks();
		projects = await _db.GetProjects();
	}

	private void Change(DropEventArgs<JustTask> args)
    {

		Console.WriteLine(args.ToString());
		Console.WriteLine(args.Items.ToString());

		foreach(var item in args.Items)
		{
			Console.WriteLine(item.Name);
		}
    }

	private void created(object args)
    {
        ListBoxObj.EnableItems(Tasks, false);
    }
}

<style>
    #listbox2 {
        width: 48%;
        float: left;
    }
</style>